name: CI/CD Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2

    - name: Cache Docker layers
      uses: actions/cache@v3
      with:
        path: /tmp/.buildx-cache
        key: ${{ runner.os }}-buildx-${{ github.sha }}
        restore-keys: |
          ${{ runner.os }}-buildx-

    - name: Build Docker image
      run: |
        docker build -t my-web-app .

    - name: Log in to Amazon ECR
      uses: aws-actions/amazon-ecr-login@v1

    - name: Tag and push Docker image
      run: |
        docker tag my-web-app:latest ${{ secrets.ECR_REPOSITORY_URI }}:latest
        docker push ${{ secrets.ECR_REPOSITORY_URI }}:latest

  deploy:
    runs-on: ubuntu-latest
    needs: build
    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Deploy to ECS
      uses: aws-actions/amazon-ecs-deploy-task-definition@v1
      with:
        task-definition: my-task-def
        service: my-service
        cluster: my-cluster
        wait-for-service-stability: true

  test:
    runs-on: ubuntu-latest
    needs: deploy
    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Run integration tests
      run: |
        # Replace with your test commands
        echo "Running integration tests..."

    - name: Rollback on failure
      if: failure()
      uses: aws-actions/amazon-ecs-roll-back-task-definition@v1
      with:
        task-definition: my-task-def
        service: myservice
        cluster: anup
